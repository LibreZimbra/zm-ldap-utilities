#!/usr/bin/perl
use strict;
use lib qw (/opt/zimbra/zimbramon/lib);
use XML::Simple;
use Getopt::Long;
use Filesys::Df;
use POSIX;

if ( ! -d "/opt/zimbra/openldap/etc" ) {
  print "ERROR: openldap does not appear to be installed - exiting\n";
  exit(1);
}

my $id = getpwuid($<);
chomp $id;
if ($id ne "zimbra") {
    print STDERR "Error: must be run as zimbra user\n";
    exit (1);
}

my ($help, $debug);

my $opts_good = GetOptions(
  'd|debug' => \$debug,
  'h|help' => \$help,
);
if (!$opts_good) {
  print STDERR "\n";
  usage();
}
if ($help) {
  usage(0);
}

my $localxml = XMLin("/opt/zimbra/conf/localconfig.xml");

my $ldap_monitor_mdb = $localxml->{key}->{ldap_monitor_mdb};
my $ldap_monitor_alert_only = $localxml->{key}->{ldap_monitor_alert_only};
my $ldap_monitor_warning = $localxml->{key}->{ldap_monitor_warning};
my $ldap_monitor_critical = $localxml->{key}->{ldap_monitor_critical};
my $ldap_monitor_growth = $localxml->{key}->{ldap_monitor_growth};
my $ldap_db_maxsize = $localxml->{key}->{ldap_db_maxsize}->{value};
my $ldap_accesslog_maxsize = $localxml->{key}->{ldap_accesslog_maxsize}->{value};
my $ldap_is_master = $localxml->{key}->{ldap_is_master}->{value};
my $zimbra_home = $localxml->{key}->{zimbra_home}->{value};

chomp($ldap_monitor_mdb);
chomp($ldap_monitor_alert_only);
chomp($ldap_monitor_warning);
chomp($ldap_monitor_critical);
chomp($ldap_monitor_growth);
chomp($ldap_db_maxsize);
chomp($ldap_accesslog_maxsize);
chomp($ldap_is_master);
chomp($zimbra_home);

if ($ldap_monitor_mdb eq "") {
  $ldap_monitor_mdb = "true";
}

if (isdigit($ldap_monitor_mdb) && $ldap_monitor_mdb == 1) {
  $ldap_monitor_mdb = "true";
}

if (isdigit($ldap_monitor_mdb) && $ldap_monitor_mdb == 0) {
  $ldap_monitor_mdb = "false";
}

if ($ldap_monitor_mdb ne "true") {
  exit 0;
}

if ($zimbra_home eq "") {
   $zimbra_home = "/opt/zimbra";
}

if ($ldap_db_maxsize eq "") {
  $ldap_db_maxsize = 85899345920;
}

if ($ldap_accesslog_maxsize eq "") {
  $ldap_accesslog_maxsize = 85899345920;
}

if ($ldap_monitor_alert_only eq "") {
  $ldap_monitor_alert_only = "true";
}

if ($ldap_monitor_warning eq "") {
  $ldap_monitor_warning = .8;
}

if ($ldap_monitor_critical eq "") {
  $ldap_monitor_critical = .9;
}

if ($ldap_monitor_growth eq "") {
  $ldap_monitor_growth = .25;
}

if (isdigit($ldap_monitor_alert_only) && $ldap_monitor_alert_only == 1) {
  $ldap_monitor_alert_only = "true";
}

if (isdigit($ldap_monitor_alert_only) && $ldap_monitor_alert_only == 0) {
  $ldap_monitor_alert_only = "false";
}

if ($ldap_monitor_warning > 1) {
  $ldap_monitor_warning/=100;
}

if ($ldap_monitor_critical > 1) {
  $ldap_monitor_critical/=100;
}

if ($ldap_monitor_growth > 1) {
  $ldap_monitor_growth/=100;
}

my $zmlocalconfig="${zimbra_home}/bin/zmlocalconfig";
my $db="${zimbra_home}/data/ldap/mdb/db/data.mdb";
my $adb="${zimbra_home}/data/ldap/accesslog/db/data.mdb";
my $blocksize=(stat $db)[11]/8;
my $mdb_used=(stat $db)[12];
$mdb_used*=$blocksize;

my $alog_used=0;
my $is_master=0;
if ($ldap_is_master && -f "${zimbra_home}/data/ldap/accesslog/db/data.mdb") {
  $is_master=1;
  $blocksize=(stat $adb)[11]/8;
  $alog_used=(stat $adb)[12];
  $alog_used*=$blocksize;
}

my $partUsage=df("/opt/zimbra/data/ldap/mdb/db");
my $totalspace = $partUsage->{blocks}*1024;
my $freespace = $partUsage->{bfree}*1024;
my $usedspace = $partUsage->{used}*1024;
if(defined($partUsage) && $debug) {
  print "Total space: ".$totalspace."\n";
  print "Total free: ".$freespace."\n";
  print "Total used: ".$usedspace."\n";
}

if ($ldap_db_maxsize > $totalspace) {
  setLocalConfig("ldap_db_maxsize", $totalspace);
  $ldap_db_maxsize=$totalspace;
}

if ($ldap_accesslog_maxsize > $totalspace) {
  setLocalConfig("ldap_accesslog_maxsize", $totalspace);
  $ldap_accesslog_maxsize=$totalspace;
}

my $mdb_warning_size = int($ldap_monitor_warning * $ldap_db_maxsize);
my $mdb_critical_size = int($ldap_monitor_critical * $ldap_db_maxsize);
my $alog_warning_size = int($ldap_monitor_warning * $ldap_accesslog_maxsize);
my $alog_critical_size = int($ldap_monitor_critical * $ldap_accesslog_maxsize);

my $mdb_alarm=0;
if ($mdb_used >= $mdb_critical_size) {
   $mdb_alarm=2;
} elsif ($mdb_used >= $mdb_warning_size) {
   $mdb_alarm=1;
}

my $mdb_growth_size=0;
if ($mdb_alarm) {
  $mdb_growth_size = int($ldap_monitor_growth * $ldap_db_maxsize);
}

my $alog_alarm=0;
if($is_master) {
  if ($alog_used >= $alog_critical_size) {
    $alog_alarm=2;
  } elsif ($alog_used >= $alog_warning_size) {
    $alog_alarm=1;
  }
}

my $alog_growth_size=0;
if ($alog_alarm) {
  $alog_growth_size = int($ldap_monitor_growth * $ldap_accesslog_maxsize);
}
my $space_alarm=0;
if ($mdb_alarm && $mdb_growth_size > $freespace && !$space_alarm) {
  $space_alarm=6;
}

if ($alog_alarm && $alog_growth_size > $freespace && !$space_alarm) {
  $space_alarm=5;
}

if ($alog_alarm && $mdb_alarm && $alog_growth_size+$mdb_growth_size > $freespace && !$space_alarm) {
  $space_alarm=4;
}

if ($debug) {
  print "ldap_db_maxsize=$ldap_db_maxsize\n";
  print "ldap_accesslog_maxsize=$ldap_accesslog_maxsize\n";
  print "mdb_used=$mdb_used\n";
  print "alog_used=$alog_used\n";
  print "mdb_warning_size=$mdb_warning_size\n";
  print "alog_warning_size=$alog_warning_size\n";
  print "mdb_critical_size=$mdb_critical_size\n";
  print "alog_critical_size=$alog_critical_size\n";
  print "mdb_alarm=$mdb_alarm\n";
  print "alog_alarm=$alog_alarm\n";
  print "space_alarm=$space_alarm\n";
  print "mdb_growth_size=$mdb_growth_size\n";
  print "alog_growth_size=$alog_growth_size\n";
}

if ($space_alarm == 6) {
  if ($mdb_alarm ==2) {
    print "CRITICAL! LDAP primary MDB database is nearly full and cannot expand due to limited free disk space.\n";
  } else {
    print "WARNING! LDAP primary MDB database is near the maximum size and cannot expand due to limited free disk space.\n";
  }
  exit 1;
}

if ($space_alarm == 5) {
  if ($alog_alarm ==2) {
    print "CRITICAL! LDAP accesslog MDB database is nearly full and cannot expand due to limited free disk space.\n";
  } else {
    print "WARNING! LDAP accesslog MDB database is near the maximum size and cannot expand due to limited free disk space.\n";
  }
  exit 1;
}

if ($space_alarm == 4) {
  print "CRITICAL! LDAP primary and accesslog MDB databases are nearly full and cannot expand due to limited free disk space.\n";
  exit 1;
}

my $growth=0;
if ($mdb_alarm && $ldap_monitor_alert_only eq "false") {
   $growth =$mdb_growth_size + $ldap_db_maxsize;
   print "Growing primary MDB database size from $ldap_db_maxsize to $growth.\n";
   setLocalConfig("ldap_db_maxsize", "$growth");
} elsif ($mdb_alarm) {
  if ($mdb_alarm == 2) {
    print "CRITICAL! LDAP primary MDB database is ".$ldap_monitor_critical*100."% full.\n";
  } else {
    print "WARNING! LDAP primary MDB database is ".$ldap_monitor_warning*100."% full.\n";
  }
}

$growth=0;
if ($alog_alarm && $ldap_monitor_alert_only eq "false") {
   $growth =$alog_growth_size + $ldap_db_maxsize;
   print "Growing accesslog MDB database size from $ldap_accesslog_maxsize to $growth.\n";
   setLocalConfig("ldap_db_maxsize", "$growth");
} elsif ($alog_alarm) {
  if ($alog_alarm == 2) {
    print "CRITICAL! LDAP accesslog MDB database is ".$ldap_monitor_critical*100."% full.\n";
  } else {
    print "WARNING! LDAP accesslog MDB database is ".$ldap_monitor_warning*100."% full.\n";
  }
}

sub setLocalConfig {
  my $key = shift;
  my $val = shift;
  print "Setting local config $key=$val\n" if $debug;
  runCommand("$zmlocalconfig -f -e ${key}=\'${val}\' 2> /dev/null");
}

sub runCommand {
  my $cmd = shift;
  my $rc;
  $rc = 0xffff & system("$cmd > /dev/null 2>&1 ");
  return $rc;
}
