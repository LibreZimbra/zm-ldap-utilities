#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# 
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007 Zimbra, Inc.
# 
# The contents of this file are subject to the Yahoo! Public License
# Version 1.0 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# 
# ***** END LICENSE BLOCK *****
# 

source `dirname $0`/../bin/zmshutil || exit 1

if [ "x$1" != "x" ]; then
	echo "Usage: $0"
	echo "	Use $0 to set up this server as an ldap replica"
	exit 1
fi

zmsetvars -f\
	zimbra_home \
	zimbra_server_hostname \
	ldap_master_url \
	ldap_port \
	ldap_root_password \
	zimbra_ldap_password \
	zimbra_ldap_userdn \
	ldap_replication_password

ldap_master_host=`echo ${ldap_master_url} | sed -e 's|ldaps*://\([^:]*\):*.*|\1|'`

verifyLdapInstalled() {
	echo -n "Looking for LDAP installation..."
	if [ ! -d ${zimbra_home}/openldap/etc ]; then
		echo "FAILED"
		echo "ERROR: openldap does not appear to be installed - exiting"
		exit 1
	fi
	echo "succeeded"
}

verifyLdap() {
	echo -n "Verifying ldap on ${ldap_master_url}..."
	LDS="${zimbra_home}/bin/ldapsearch";
	ARGS="-x -H ${ldap_master_url} -D ${zimbra_ldap_userdn} -w ${zimbra_ldap_password}"
	OUTPUT=`$LDS $ARGS 2>&1`
	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "ERROR: Unable to verify ldap connection on ${ldap_master_url} - exiting"
    echo "$LDS $ARGS"
    echo $OUTPUT
		exit 1
	fi
	echo "succeeded"
}

enableSyncProv() {
	echo -n "Enabling sync provider..."
	sed -i.pre-replica -e '/syncprov/ s/#//g' -e '/accesslog/ s/###//g' ${zimbra_home}/conf/slapd.conf.in
	mkdir -p ${zimbra_home}/openldap-data/accesslog/db
	mkdir -p ${zimbra_home}/openldap-data/accesslog/logs
	cp -p -f ${zimbra_home}/openldap/etc/openldap/master-accesslog.conf ${zimbra_home}/conf/
	cp -p -f ${zimbra_home}/openldap/etc/openldap/master-accesslog-overlay.conf ${zimbra_home}/conf/
	echo "succeeded"
}

createLdapConfig() {
	echo -n "Creating LDAP config in ${zimbra_home}/conf/slapd.conf..."
	root_sha=`${zimbra_home}/openldap/sbin/slappasswd -s ${ldap_root_password}`
	sed -e "s|^rootpw.*|rootpw ${root_sha}|" \
		${zimbra_home}/openldap/etc/openldap/slapd.conf > ${zimbra_home}/conf/slapd.conf.in
	sed -e '/overlay syncprov/d' -e '/syncprov-/d' ${zimbra_home}/conf/slapd.conf.in >/tmp/slapd.conf.in.$$
	mv -f /tmp/slapd.conf.in.$$ ${zimbra_home}/conf/slapd.conf.in

	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "ERROR - LDAP config creation failed - exiting"
	fi

	ldap_replica_rid=100

	if [ -f "/opt/zimbra/lib/conf/zimbra-ext.schema" ]; then
		sed -e '\|/opt/zimbra/openldap/etc/openldap/schema/zimbra.schema| a\
include		"/opt/zimbra/lib/conf/zimbra-ext.schema"' ${zimbra_home}/conf/slapd.conf.in > /tmp/slapd.conf
		mv -f /tmp/slapd.conf ${zimbra_home}/conf/slapd.conf.in
	fi

	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "ERROR - LDAP config creation failed - exiting"
	fi

        num=`expr match "$ldap_url" 'ldaps*'`
        if [ "$num" == 5 ]; then
	cat >> ${zimbra_home}/conf/slapd.conf.in <<EOF
syncrepl rid=${ldap_replica_rid}
	provider=${ldap_master_url}
	retry="60 +"
	type=refreshAndPersist
	schemachecking=off
	searchbase=""
	bindmethod=simple
	binddn=uid=zmreplica,cn=admins,cn=zimbra
	credentials=${ldap_replication_password}
	logbase="cn=accesslog"
	logfilter="(&(objectClass=auditWriteObject)(reqResult=0))"
	syncdata="accesslog"

updateref  ${ldap_master_url}
overlay syncprov
EOF
	else
	cat >> ${zimbra_home}/conf/slapd.conf.in <<EOF
syncrepl rid=${ldap_replica_rid}
	provider=${ldap_master_url}
	retry="60 +"
	type=refreshAndPersist
	schemachecking=off
	searchbase=""
	bindmethod=simple
	binddn=uid=zmreplica,cn=admins,cn=zimbra
	credentials=${ldap_replication_password}
	starttls=critical
	logbase="cn=accesslog"
	logfilter="(&(objectClass=auditWriteObject)(reqResult=0))"
	syncdata="accesslog"

updateref  ${ldap_master_url}
overlay syncprov
EOF
	fi

	/opt/zimbra/libexec/zmconfigure /opt/zimbra/conf/slapd.conf.in /opt/zimbra/conf/slapd.conf

	echo "succeeded"
}

enableLdapService() {
	echo -n "Enabling LDAP service on ${zimbra_server_hostname}..."
	SERVICES=`/opt/zimbra/bin/zmprov -l gs ${zimbra_server_hostname} | sed -ne '/^zimbraServiceEnabled/ s/zimbraServiceEnabled: //p'`
	echo $SERVICES | grep -q ldap
	if [ $? -ne 0 ]; then
		echo -n "..."
		NEWSERVICES="zimbraServiceEnabled ldap"
		for s in $SERVICES; do
			NEWSERVICES="$NEWSERVICES zimbraServiceEnabled $s"
		done
		/opt/zimbra/bin/zmprov -l ms ${zimbra_server_hostname} $NEWSERVICES
	fi
	echo "succeeded"
}

stopRemoteZimbra() {
	echo -n "Shutting down Zimbra Services on ${ldap_master_host}..."
	echo "HOST:${ldap_master_host} shutdown" | ${zimbra_home}/libexec/zmrc ${ldap_master_host} \
		> /dev/null 2>&1

	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "Remote shutdown failed - exiting"
		exit 1
	fi
	echo "done"
}

stopZimbra() {
	echo -n "Shutting down Zimbra Services on ${zimbra_server_hostname}..."
	zmcontrol stop > /dev/null 2>&1
	echo "done"
}

replicateLdap() {
	echo -n "Replicating ldap data from ${ldap_master_host}..."
	echo -n "Copying data..."
	echo "HOST:${ldap_master_host} slapcat" | ${zimbra_home}/libexec/zmrc ${ldap_master_host} | \
		grep -v STARTCMD | grep -v ENDCMD > /tmp/repl.ldif

	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "Ldap replication failed - exiting"
		exit 1
	fi

	echo -n "Writing data..."

	${zimbra_home}/openldap/sbin/slapadd -q -w -b '' -f ${zimbra_home}/conf/slapd.conf -l /tmp/repl.ldif
	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "Ldap replication failed - exiting"
		exit 1
	fi

	#/bin/rm -f /tmp/repl.ldif
	echo "succeeded"
}

updateLdapHost() {
	echo -n "Setting ldap_url on ${zimbra_server_hostname}...";
  if [ ${ldap_port} = 636 ]; then
    proto="ldaps"
  else 
    proto="ldap"
  fi
	zmlocalconfig -e ldap_url="${proto}://${zimbra_server_hostname}:${ldap_port} ${ldap_master_url}"
	echo "done"
}

startRemoteZimbra() {
	echo -n "Starting remote Zimbra Services on ${ldap_master_host}..."
	echo "HOST:${ldap_master_host} startup" | ${zimbra_home}/libexec/zmrc ${ldap_master_host} \
		> /dev/null 2>&1

	if [ $? -ne 0 ]; then
		echo "FAILED"
		echo "Remote startup failed - exiting"
		exit 1
	fi
	echo "done"
}

startLdap() {
	echo -n "Starting LDAP on ${zimbra_server_hostname}..."
	${zimbra_home}/bin/ldap start > /dev/null 2>&1
	echo "done"
}
stopLdap() {
	echo -n "Stopping LDAP on ${zimbra_server_hostname}..."
	${zimbra_home}/bin/ldap stop > /dev/null 2>&1
	echo "done"
}

if [ $ldap_master_host = $zimbra_server_hostname ]; then
	enableSyncProv
  stopLdap
  startLdap
	exit 0
fi

verifyLdapInstalled
verifyLdap
createLdapConfig
enableLdapService
#stopZimbra
#stopRemoteZimbra
#replicateLdap
updateLdapHost
#startRemoteZimbra
zmsetvars -f ldap_url
startLdap
