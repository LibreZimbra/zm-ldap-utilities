#!/usr/bin/perl
# 
# ***** BEGIN LICENSE BLOCK *****
# 
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007 Zimbra, Inc.
# 
# The contents of this file are subject to the Yahoo! Public License
# Version 1.0 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# 
# ***** END LICENSE BLOCK *****
# 

use strict;
my $zimbra_home = "/opt/zimbra";

use lib "/opt/zimbra/zimbramon/lib";
use Zimbra::Util::Common;
use Zimbra::Mon::Logger;

$ENV{PATH} = "/bin:/usr/bin:/sbin:/usr/sbin:${zimbra_home}/bin";

# Exit if software-only node.
exit(0) unless (-f "${zimbra_home}/conf/localconfig.xml");

$SIG{ALRM} = \&catchAlarm;

my $platform=`${zimbra_home}/libexec/get_plat_tag.sh`;
chomp $platform;

my $pidFile="${zimbra_home}/log/zmdisklog.pid";

my $TIMEOUT=60;
my $MNTCMD;
my $DFCMD;
my $DISK_CRIT_THRESHOLD = 90;
my $DISK_WARN_THRESHOLD = 80;

if ($platform =~ /MACOSX/) {
	$MNTCMD = "mount -t hfs";
	$DFCMD = "df -ml ";
} else {
	$MNTCMD = "mount -t ext3";
	$DFCMD = "df -mlP ";
}

my $dt = `date "+%Y-%m-%d %H:%M:%S"`;
chomp $dt;

my $hostname = `${zimbra_home}/bin/zmhostname`;
chomp $hostname;

checkPid();
logDiskUsage();
clearPid();

exit 0;


sub logDiskUsage {
	my @mounts = ();
	open MOUNTS, "$MNTCMD |" or die "Can't open $MNTCMD: $!";
	@mounts = <MOUNTS>;
  alarm($TIMEOUT);
	close MOUNTS;
	foreach my $m (@mounts) {
		chomp $m;
		my ($dev,undef,$mp) = split(/\s+/,$m);
		open DF, "$DFCMD \"$dev\" | tail -1 |" or die "Can't open $DFCMD: $!";
		my @df = <DF>;
		close DF;
		my (undef, $total, $used, $avail) = split(/\s+/, $df[0]);
    my $pct=int(($used/$total)*100) if ($total > 0);
    my $lvl = "info";
    $lvl = "err" if ($pct > $DISK_WARN_THRESHOLD);
    $lvl = "crit" if ($pct > $DISK_CRIT_THRESHOLD);
    if ($lvl eq "info") {
		  Zimbra::Mon::Logger::Log( "$lvl", "$dt, DISK: ${hostname}: dev: $dev, mp: $mp, tot: $total, avail: $avail" );
    } else {
		  Zimbra::Mon::Logger::Log( "$lvl", "Disk warning: ${hostname} $dev at $pct%" );
    }
	}
  alarm(0);
}

sub checkPid {
  if (-f "$pidFile") {
    my $P = `cat $pidFile`;
    chomp $P;
    if ($P ne "") {
      system("kill -0 $P 2> /dev/null");
      if ($? == 0) {
        print "$0 already running with pid $P\n";
        exit 0;
      }
    }
  }
  `echo $$ > "$pidFile"`;
}

sub clearPid {
  unlink($pidFile);
}

sub catchAlarm {
		Zimbra::Mon::Logger::Log( "info", "zmdisklog timeout after $TIMEOUT seconds"); 
    exit 1;
}
